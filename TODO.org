#+title: Terraform Progression

*** TODO **Step0:** Do manual work here

*** TODO **Step1:** Do Terraform HCL with hardcoded values here

Refer to:

#+begin_src terraform

resource "null_resource" "update_source_files" {
    provisioner "local-exec" {
        command     = "aws s3 sync app/ s3://my-s3-bucket"
    }
}

#+end_src

*** TODO **Step2:** Do Terraform HCL with injected values here

Refer to:
- [[https://12factor.net/][Twelve-Factor App]]
- [[https://developer.hashicorp.com/terraform/language/values/variables#variables-on-the-command-line][Terraform Input Variables]]

  Variables can be set from the CLI directly or through Environment

  #+begin_src bash

  terraform apply -var="image_id=ami-abc123"
  terraform apply -var='image_id_list=["ami-abc123","ami-def456"]' -var="instance_type=t2.micro"
  terraform apply -var='image_id_map={"us-east-1":"ami-abc123","us-east-2":"ami-def456"}'

  #+end_src

  But using a **.tfvars** file such as /testing.tfvars/ seem more convenient

  #+begin_src terraform testing.tfvars

  name=Achille
  profession=DevOps Engineer

  #+end_src

  #+begin_src bash

  terraform apply -var-file="testing.tfvars"

  #+end_src



*** TODO **Step3:** Do Terraform HCL with multiple provider modules here

*** TODO **Step4:** Do Terraform CDK conversion of HCL from step3 here

Refer to:

- [[https://developer.hashicorp.com/terraform/cdktf][Terraform CDK]]
- [[https://registry.terraform.io/browse/providers][Terraform Providers]]
- [[https://rye-up.com/][Python Rye]]
- [[https://astral.sh/blog/uv][Python uv]]

#+begin_src bash

curl -sSf https://rye-up.com/get | bash

#+end_src

#+begin_src bash

cdktf init --template="python-pip" --providers="aws@~>5.39,azurerm@~>3.94,google@~>5.19"

#+end_src

#+begin_src bash

source `pwd`/.venv/bin/activate # activate the Rye based Python environment

#+end_src


#+begin_src bash

cd step4 # navigate to step4

cdktf plan # execute the Terraform CDK plan

cdktf deploy # proceed with the deployment of the resources defined with the Terraform CDK

cdktf destrpy # destroy all the resources

#+end_src


* CDKTF Windows Setup
** Preparation
   #+BEGIN_SRC sh
   # Ensure you're in the correct starting directory (modify as needed)
   Set-Location "path\\to\\your\\directory"
   #+END_SRC

** Initialize CDKTF Project
   #+BEGIN_SRC sh
   cdktf init --template="python-pip" --providers="aws@~>5.39,azurerm@~>3.94,google@~>5.19"
   #+END_SRC

** Activate the Python Virtual Environment
   #+BEGIN_SRC sh
   .venv\\Scripts\\Activate.ps1
   #+END_SRC

** Navigate to the step4 Directory
   #+BEGIN_SRC sh
   cd step4
   #+END_SRC

** Execute the Terraform CDK Plan
   #+BEGIN_SRC sh
   cdktf plan
   #+END_SRC

** Proceed with the Deployment
   #+BEGIN_SRC sh
   cdktf deploy
   #+END_SRC

* Cleanup (Optional)
** Destroy All the Resources (When Needed)
   #+BEGIN_SRC sh
   # cdktf destroy
   #+END_SRC
